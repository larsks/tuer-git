<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright (c) 2006-2014 Julien Gouesse
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 -->

<!-- ===================================================================== -->
<!-- First person shooter and editor                                       -->
<!-- Ant 1.8 build file                                                    -->
<!-- ===================================================================== -->

<project name="First person shooter and editor" default="build" basedir=".">
	<import file="jndt.xml"/>
	<!-- external tasks -->
	<!-- task that allows the use of optional tasks without modifying the Ant install by modifying the classpath at runtime -->
	<taskdef resource="net/jtools/classloadertask/antlib.xml" classpath="lib/ant/ant-classloadertask.jar"/>
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="lib/ant/ant-contrib-1.0b3.jar"/>
	<!-- Branding properties (brands, logos, ... which should be modified in order to avoid any trademark infringement) -->
	<if>
		<available file="branding.properties" />
		<then>
			<property file="branding.properties" />
		</then>
		<else>
			<fail message="The branding property file is missing" />
		</else>
	</if>
	<!-- Properties -->
	<property name="bindir" value="."/>
	<!-- directory containing signed JARs, JNLP files and images that are used in the deployed product -->
	<property name="destdir" value="target"/>
	<!-- directory containing the source code -->
	<property name="srcdir" value="."/>
	<property name="homepage-url" value="http://${project-unix-name}.sourceforge.net" />
	<property name="codebase-url" value="${homepage-url}/very_experimental/" />
	<property name="vendor" value="Julien GOUESSE" />
	<property name="email" value="gouessej@orange.fr" />
	<property name="alias" value="gouessej"/>
	<property name="keystore" value="${destdir}/key"/>
	<property name="openjdk-macosx-universal-build-url" value="https://bitbucket.org/alexkasko/openjdk-unofficial-builds/downloads/openjdk-1.7.0-u60-unofficial-macosx-x86_64-image.zip"/>
	<property name="openjdk-linux-i586-build-url" value="https://bitbucket.org/alexkasko/openjdk-unofficial-builds/downloads/openjdk-1.7.0-u60-unofficial-linux-i586-image.zip"/>
	<property name="openjdk-linux-amd64-build-url" value="https://bitbucket.org/alexkasko/openjdk-unofficial-builds/downloads/openjdk-1.7.0-u60-unofficial-linux-amd64-image.zip"/>
	<property name="openjdk-windows-i586-build-url" value="https://bitbucket.org/alexkasko/openjdk-unofficial-builds/downloads/openjdk-1.7.0-u60-unofficial-windows-i586-image.zip"/>
	<property name="openjdk-windows-amd64-build-url" value="https://bitbucket.org/alexkasko/openjdk-unofficial-builds/downloads/openjdk-1.7.0-u60-unofficial-windows-amd64-image.zip"/>
	<!--<property name="openjdk-macosx-universal-build-url" value="/home/gouessej/Téléchargements/openjdk-1.7.0-u60-unofficial-macosx-x86_64-image.zip"/>
	<property name="openjdk-linux-i586-build-url" value="/home/gouessej/Téléchargements/openjdk-1.7.0-u60-unofficial-linux-i586-image.zip"/>
	<property name="openjdk-linux-amd64-build-url" value="/home/gouessej/Téléchargements/openjdk-1.7.0-u60-unofficial-linux-amd64-image.zip"/>
	<property name="openjdk-windows-i586-build-url" value="/home/gouessej/Téléchargements/openjdk-1.7.0-u60-unofficial-windows-i586-image.zip"/>
	<property name="openjdk-windows-amd64-build-url" value="/home/gouessej/Téléchargements/openjdk-1.7.0-u60-unofficial-windows-amd64-image.zip"/>-->
	<property name="game-version" value="0.0.0" />
	<property name="game-release" value="0" />
	<property name="game-group" value="Applications/Games" />
	<property name="game-section" value="games" />
	<property name="game-license" value="GPL" />
	<property name="game-main-class" value="engine.service.Ardor3DGameServiceProvider"/>
	<property name="game-main-class-for-packr" value="engine/service/Ardor3DGameServiceProvider"/>
	<property name="game-jnlp-filename" value="${project-unix-name}.jnlp" />
	<property name="game-jar-filename" value="${project-unix-name}.jar" />
	<property name="game-src-zip-filename" value="${project-unix-name}-${game-version}-${game-release}.src.zip" />
	<!-- The logo of the game must be a PNG file composed of 64 * 64 pixels -->
	<property name="game-logo-filename" value="${project-unix-name}Logo.png"/>
	<property name="game-bundle-identifier" value="net.sourceforge.tuer" />
	<property name="ardor3d-version" value="1.0-SNAPSHOT" />
	<property name="editor-main-class" value="connection.JFPSMServiceProvider"/>
	<property name="editor-splashscreen-image" value="images/jfpsm_splashscreen.png"/>
	<property name="editor-jnlp-filename" value="jfpsm.jnlp" />
	<property name="editor-jar-filename" value="jfpsm.jar" />
	<!-- example of value for an archived post build: http://jogamp.org/deployment/archive/master/gluegen_813-joal_557-jogl_1322-jocl_995/fat -->
	<!-- example of value for the current release or release candidate: http://jogamp.org/deployment/jogamp-current/fat -->
	<!-- example of value for a released version: http://jogamp.org/deployment/v2.2.4/fat -->
	<property name="jogamp-unsigned-jars-url" value="http://jogamp.org/deployment/archive/master/gluegen_876-joal_603-jogl_1414-jocl_1066/fat" />
	<!-- Sourceforge username -->
	<property name="sftp-userid" value="gouessej" />
	<!-- Sourceforge Project Web space -->
	<property name="sftp-server" value="web.sourceforge.net" />
	<property name="sftp-remotedir" value="/home/project-web/${project-unix-name}/htdocs/very_experimental" />
	<!-- Sourceforge Project file releases -->
	<property name="sftp-pfs-server" value="frs.sourceforge.net" />
	<property name="sftp-pfs-remotedir" value="/home/pfs/project/${project-unix-name}/${project-unix-name}/${project-unix-name}-${game-version}"/><!-- N.B: no release number in the directory name -->
	<path id="project.class.path">
		<!-- N.B: do not add java.class.path -->
		<pathelement path="${bindir}"/>
		<pathelement location="lib/ardor3d/ardor3d-collada-${ardor3d-version}.jar"/>
		<pathelement location="lib/ardor3d/ardor3d-core-${ardor3d-version}.jar"/>
		<pathelement location="lib/ardor3d/ardor3d-math-${ardor3d-version}.jar"/>
		<pathelement location="lib/ardor3d/ardor3d-savable-${ardor3d-version}.jar"/>
		<pathelement location="lib/ardor3d/ardor3d-extras-${ardor3d-version}.jar"/>
		<pathelement location="lib/ardor3d/ardor3d-jogl-${ardor3d-version}.jar"/>
		<pathelement location="lib/ardor3d/ardor3d-ui-${ardor3d-version}.jar"/>
		<pathelement location="lib/fettle/fettle-0.7.0.jar"/>
		<pathelement location="lib/google-collect/guava-18.0.jar"/>
		<pathelement location="lib/jogamp/jogamp-fat.jar"/>
		<pathelement location="lib/pss/CodecJOrbis.jar"/>
		<pathelement location="lib/pss/LibraryJavaSound.jar"/>
		<pathelement location="lib/pss/LibraryJOAL.jar"/>
		<pathelement location="lib/pss/SoundSystem.jar"/>
	</path>
	<target name="check-ant-and-java-versions" description="Checks Ant and Java versions">
		<fail message="Please build using Ant 1.8.4 or higher.">
		    <condition>
		        <not>
		            <antversion atleast="1.8.4"/>
		        </not>
		    </condition>
		</fail>
		<fail message="Please use Java SDK 1.7 or higher.">
			<condition>
				<not>
					<or>
						<equals arg1="${ant.java.version}" arg2="1.7"/>
						<equals arg1="${ant.java.version}" arg2="1.8"/>
						<equals arg1="${ant.java.version}" arg2="1.9"/>
					</or>
				</not>
			</condition>
		</fail>
	</target>
	<!-- ================================================================= -->
	<!-- Upgrade JogAmp                                                    -->
	<!-- ================================================================= -->
	<target name="upgrade-jogamp" description="Upgrades JogAmp">
		<!-- updates the local files -->
		<get src="${jogamp-unsigned-jars-url}/jogamp-fat.jar" dest="lib/jogamp" verbose="true" usetimestamp="true" skipexisting="false" />
	</target>
	<!-- ================================================================= -->
	<!-- Compile                                                           -->
	<!-- ================================================================= -->
	<target name="compile" description="Compiles the source code">
		<javac includeantruntime="false" srcdir="${srcdir}"       	   
	           destdir="${bindir}"
	           debug="on" >
			<classpath refid="project.class.path"/>
			<include name="**/*.java"/>
		</javac>
	</target>
	<!-- =================================================================== -->
	<!-- Build                                                               -->
	<!-- =================================================================== -->
	<target name="build" depends="clean,compile,dist" description="Performs a clean build of the source code and deploys the application"/>
	<!-- ================================================================= -->
	<!-- Dist                                                              -->
	<!-- ================================================================= -->
	<target name="dist" depends="compile" description="Creates the deployable files and uploads them onto the server(s)">
		<!-- Creates the destination directory -->
		<mkdir dir="${destdir}"/>
		<!-- Copies the logo into it -->
		<copy file="images/${game-logo-filename}" todir="${destdir}" overwrite="true" />
		<!-- Creates the JARs of the applications -->
		<antcall target="create-jars" />
		<!-- Creates the GNU Linux archives and packages -->
		<antcall target="create-linux-pkgs" />
		<!-- Creates the archived Mac OS X application bundle -->
		<antcall target="create-os-x-app" />
		<!-- Creates the Microsoft Windows archives -->
		<antcall target="create-windows-pkgs" />
		<!-- Signs the JARs -->
		<antcall target="sign-jars" />
		<!-- Creates the JNLP files used by the end users to run the application with Java Web Start -->
		<antcall target="create-jnlp-files" />
		<!-- Deletes the archive to avoid getting an error when trying to compress itself and creates it -->
		<antcall target="create-archive" />
		<!-- Sends all stuffs to the server(s) -->
		<antcall target="upload" />
	</target>
	<!-- ================================================================= -->
	<!-- Create JARs                                                       -->
	<!-- ================================================================= -->
	<target name="create-jars">
		<jar destfile="${destdir}/${editor-jar-filename}" basedir="${bindir}" includes="**/*.class" compress="false">
			<!-- Fat JAR -->
			<!-- JogAmp: Gluegen, JOAL, JOCL and JOGL -->
			<zipfileset src="lib/jogamp/jogamp-fat.jar" includes="**/*.class,**/*.png,**/*.glsl,**/*.vp,**/*.fp,**/*.bvp,**/*.bfp,**/*.so,**/*.jnilib,**/*.dylib,**/*.dll,**/.bin" />
			<!-- Ardor3D, Paul Lamb Sound Library, Fettle and Guava -->
			<zipfileset src="lib/ardor3d/ardor3d-collada-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-core-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-extras-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-jogl-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-math-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-savable-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-ui-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/fettle/fettle-0.7.0.jar" includes="**/*.class" />
			<zipfileset src="lib/google-collect/guava-18.0.jar" includes="**/*.class" />
			<zipfileset src="lib/pss/CodecJOrbis.jar" includes="**/*.class" />
			<zipfileset src="lib/pss/LibraryJavaSound.jar" includes="**/*.class" />
			<zipfileset src="lib/pss/LibraryJOAL.jar" includes="**/*.class" />
			<zipfileset src="lib/pss/SoundSystem.jar" includes="**/*.class" />
			<!-- the rest of the files (not within JARs) -->
			<include name="**/LICENSE.txt" />
			<include name="**/NOTICE.txt" />
			<include name="**/README.txt" />
			<include name="**/branding.properties" />
			<!-- the collada models are not yet used -->
			<exclude name="**/dae/*" />
			<!-- ANT file -->
			<exclude name="**/build.xml" />
			<exclude name="**/*.py" />
			<manifest>
				<attribute name="Application-Name" value="${editor-long-name}" />
				<attribute name="Main-Class" value="${editor-main-class}" />
				<attribute name="SplashScreen-Image" value="${editor-splashscreen-image}" />
				<attribute name="Trusted-Only" value="true" />
				<attribute name="Trusted-Library" value="false" />
				<attribute name="Permissions" value="all-permissions"/>
				<attribute name="Codebase" value="${codebase-url}"/>
			</manifest>
		</jar>
		<!-- extracts the manifest of the main JOGL JAR -->
		<unzip src="lib/jogl/lib/jogamp/jogamp-fat.jar.jar" dest="${destdir}">
		    <patternset>
		        <include name="META-INF/MANIFEST.MF"/>
		    </patternset>
		</unzip>
		<!-- keeps only the attributes of the implementation -->
		<copy file="${destdir}/META-INF/MANIFEST.MF" tofile="${destdir}/META-INF/MANIFEST.MF.tmp">
		    <filterchain>
		        <linecontains>
		            <contains value="Implementation-"/>
		        </linecontains>
		    </filterchain>
		</copy>
		<copy file="${destdir}/META-INF/MANIFEST.MF.tmp" tofile="${destdir}/META-INF/MANIFEST.MF"/>
		<!-- fills the manifest with other necessary attributes -->
		<manifest file="${destdir}/META-INF/MANIFEST.MF" mode="update">
			<attribute name="Application-Name" value="${game-long-name}"/>
			<attribute name="Main-Class" value="${game-main-class}"/>
			<attribute name="Trusted-Only" value="true"/>
			<attribute name="Trusted-Library" value="false"/>
			<attribute name="Permissions" value="all-permissions"/>
			<attribute name="Codebase" value="${codebase-url}"/>
		</manifest>
		<jar destfile="${destdir}/${game-jar-filename}" manifest="${destdir}/META-INF/MANIFEST.MF" basedir="${bindir}" includes="**/*.class" compress="false">
			<!-- Fat JAR -->
			<!-- JogAmp: Gluegen, JOAL, JOCL and JOGL -->
			<zipfileset src="lib/jogamp/jogamp-fat.jar" includes="**/*.class,**/*.png,**/*.glsl,**/*.vp,**/*.fp,**/*.bvp,**/*.bfp,**/*.so,**/*.jnilib,**/*.dylib,**/*.dll,**/.bin" />
			<!-- Ardor3D, Paul Lamb Sound Library, Fettle and Guava -->
			<zipfileset src="lib/ardor3d/ardor3d-collada-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-core-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-extras-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-jogl-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-math-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-savable-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/ardor3d/ardor3d-ui-${ardor3d-version}.jar" includes="**/*.a3d,**/*.class,**/*.bmp,**/*.png,**/*.jpg,**/*.tga,**/*.fnt" />
			<zipfileset src="lib/fettle/fettle-0.7.0.jar" includes="**/*.class" />
			<zipfileset src="lib/google-collect/guava-18.0.jar" includes="**/*.class" />
			<zipfileset src="lib/pss/CodecJOrbis.jar" includes="**/*.class" />
			<zipfileset src="lib/pss/LibraryJavaSound.jar" includes="**/*.class" />
			<zipfileset src="lib/pss/LibraryJOAL.jar" includes="**/*.class" />
			<zipfileset src="lib/pss/SoundSystem.jar" includes="**/*.class" />
			<!-- the rest of the files (not within JARs) -->
			<include name="**/*.bmp" />
			<include name="**/*.png" />
			<include name="**/*.jpg" />
			<include name="**/*.fnt" />
			<include name="**/sounds/*.ogg" />
			<!-- the game does not need the classes of the editor -->
			<exclude name="**/jfpsm/*.class" />
			<exclude name="**/connection/*.class" />
			<!-- the collada models -->
			<!--<include name="**/dae/*.dae" />-->
			<include name="**/abin/*.abin" />
			<include name="**/LICENSE.txt" />
			<include name="**/NOTICE.txt" />
			<include name="**/README.txt" />
			<include name="**/branding.properties" />
			<!-- ANT file -->
			<exclude name="**/build.xml" />
			<exclude name="**/*.py" />
			<!-- miscellaneous libraries -->
			<exclude name="**/lib/**" />
			<manifest>
				<attribute name="Application-Name" value="${game-long-name}"/>
				<attribute name="Main-Class" value="${game-main-class}"/>
				<attribute name="Trusted-Only" value="true"/>
				<attribute name="Trusted-Library" value="false"/>
				<attribute name="Permissions" value="all-permissions"/>
				<attribute name="Codebase" value="${codebase-url}"/>
			</manifest>
		</jar>
		<delete dir="${destdir}/META-INF" failonerror="true"/>
	</target>
	<!-- ================================================================= -->
	<!-- Sign JARs                                                         -->
	<!-- ================================================================= -->
	<target name="sign-jars">
		<!-- deletes the keystore if any -->
		<delete file="${keystore}" failonerror="false" />
		<!-- gets the storepass -->
		<input message="Please enter the store pass:" addproperty="storepass"/>
		<!-- creates the keystore -->
		<genkey alias="${alias}" storepass="${storepass}" keystore="${keystore}">
			<dname>
				<param name="CN" value="${vendor}"/>
				<param name="OU" value="Engineer"/>
				<param name="O"  value="FGF"/>
				<param name="C"  value="FR"/>
				<param name="L"  value="BAGNOLET"/>
				<param name="S"  value="FRANCE"/>
			</dname>
		</genkey>
		<!-- uses this keystore to sign the JARs -->
		<signjar alias="${alias}" keystore="${keystore}" storepass="${storepass}" lazy="false" destDir="${destdir}" tsaurl="http://timestamping.edelweb.fr/service/tsp">
			<path>
				<pathelement location="${destdir}/${game-jar-filename}"/>
				<pathelement location="${destdir}/${editor-jar-filename}"/>
			</path>
		</signjar>
		<!-- deletes the keystore if any -->
		<delete file="${keystore}" failonerror="false" />
	</target>
	<!-- ================================================================= -->
	<!-- Create JNLP files                                                 -->
	<!-- ================================================================= -->
	<target name="create-jnlp-files">
		<!-- generate the JNLP files used by Java Web Start -->
		<echo file="${destdir}/${game-jnlp-filename}">
			<![CDATA[<?xml version="1.0" encoding="utf-8"?>
			<jnlp spec="1.0+" codebase="${codebase-url}" href="${game-jnlp-filename}">
				<information>
					<title>${game-long-name}</title>
					<vendor>${vendor}</vendor>
					<homepage href="${homepage-url}"/>
					<description>${game-long-description}</description>
					<description kind="short">${game-short-description}</description>
					<icon kind="default" href="${game-logo-filename}"/>
					<icon kind="splash" href="${game-logo-filename}"/>
					<icon kind="shortcut" href="${game-logo-filename}"/>
					<shortcut online="false" install="true">
						<desktop/>
					</shortcut>
					<offline-allowed/>
				</information>
				<security>
					<all-permissions />
				</security>
				<update check="always" policy="always"/>
				<resources>
					<j2se version="1.7+" href="http://java.sun.com/products/autodl/j2se" initial-heap-size="32m" max-heap-size="256m" java-vm-args="-XX:MaxDirectMemorySize=128M"/>
					<property name="sun.nio.MaxDirectMemorySize" value="128M"/>
					<property name="sun.java2d.noddraw" value="true"/>
					<property name="sun.java2d.d3d" value="false"/>
					<property name="sun.java2d.opengl" value="false"/>
					<property name="sun.java2d.xrender" value="true"/>
					<property name="java.ext.dirs" value="" />
					<jar href="${game-jar-filename}" download="eager" main="true"/>
				</resources>
				<application-desc main-class="${game-main-class}" />
			</jnlp>
			]]>
		</echo>
		<echo file="${destdir}/${editor-jnlp-filename}">
			<![CDATA[<?xml version="1.0" encoding="utf-8"?>
			<jnlp spec="1.0+" codebase="${codebase-url}" href="${editor-jnlp-filename}">
				<information>
					<title>${editor-long-name}</title>
					<vendor>${vendor}</vendor>
					<homepage href="${homepage-url}"/>
					<description>${editor-long-description}</description>
					<description kind="short">${editor-short-description}</description>
					<offline-allowed/>
				</information>
				<security>
					<all-permissions />
				</security>
				<update check="always" policy="always"/>
				<resources>
					<j2se version="1.7+" href="http://java.sun.com/products/autodl/j2se" initial-heap-size="32m" max-heap-size="512m" java-vm-args="-XX:MaxDirectMemorySize=128M"/>
					<property name="sun.nio.MaxDirectMemorySize" value="128M"/>
					<property name="sun.java2d.noddraw" value="true"/>
					<property name="sun.java2d.d3d" value="false"/>
					<property name="sun.java2d.opengl" value="false"/>
					<property name="sun.java2d.xrender" value="true"/>
					<property name="java.ext.dirs" value="" />
					<property name="sun.awt.noerasebackground" value="true"/>
					<jar href="${editor-jar-filename}" download="eager" main="true"/>
				</resources>
				<application-desc main-class="${editor-main-class}" />
			</jnlp>
			]]>
		</echo>
	</target>
	<!-- ================================================================= -->
	<!-- Create archive                                                    -->
	<!-- ================================================================= -->
	<target name="create-archive">
		<delete file="${destdir}/${game-src-zip-filename}" failonerror="false" />
		<!-- Creates the archive -->
		<zip destfile="${destdir}/${game-src-zip-filename}">
			<fileset dir="." excludes="**/*.class,**/target/*,${keystore},**/*.py"/>
		</zip>
	</target>
	<!-- ================================================================= -->
	<!-- Create GNU Linux packages (RPM, DEB, tar.gz)                      -->
	<!-- ================================================================= -->
	<target name="create-linux-pkgs">
		<to-package-name property="game-package-name" input="${game-short-name}"/>
		<create-linux-app-bundles executable="${game-package-name}" appjar="${destdir}/${game-jar-filename}" appname="${game-short-name}"
		    outdir="${destdir}" vmargs="-Xmx256m;-XX:MaxDirectMemorySize=128M;-Djava.ext.dirs=" docdir="." docdirincludes="*.txt"
		    jdk="${openjdk-linux-i586-build-url}" bundleidentifier="${game-bundle-identifier}" iconsfile="images/${game-logo-filename}" 
		    antreimplementationenabled="true" nativelauncherenabled="false" arch="i386" version="${game-version}" release="${game-release}"
			categories="Game;Shooter;" comment="${game-short-description}" vendor="${vendor}" packager="${vendor}" license="${game-license}" 
			summary="${game-short-description}" description="${game-long-description}" group="${game-group}" section="${game-section}" 
			host="${codebase-url}" url="${homepage-url}" email="${email}"/>
		<create-linux-app-bundles executable="${game-package-name}" appjar="${destdir}/${game-jar-filename}" appname="${game-short-name}"
		    outdir="${destdir}" vmargs="-Xmx256m;-XX:MaxDirectMemorySize=128M;-Djava.ext.dirs=" docdir="." docdirincludes="*.txt"
		    jdk="${openjdk-linux-amd64-build-url}" bundleidentifier="${game-bundle-identifier}" iconsfile="images/${game-logo-filename}" 
		    antreimplementationenabled="true" nativelauncherenabled="false" arch="amd64" version="${game-version}" release="${game-release}"
		    categories="Game;Shooter;" comment="${game-short-description}" vendor="${vendor}" packager="${vendor}" license="${game-license}" 
		    summary="${game-short-description}" description="${game-long-description}" group="${game-group}" section="${game-section}"
			host="${codebase-url}" url="${homepage-url}" email="${email}"/>
	</target>
	<!-- ================================================================= -->
	<!-- Create Microsoft Windows packages (MSI, zip)                      -->
	<!-- ================================================================= -->
	<target name="create-windows-pkgs">
		<to-package-name property="game-package-name" input="${game-short-name}"/>
		<create-windows-app-bundle executable="${game-package-name}" appjar="${destdir}/${game-jar-filename}" appname="${game-short-name}"
		    outdir="${destdir}" vmargs="-Xmx256m;-XX:MaxDirectMemorySize=128M;-Djava.ext.dirs=" docdir="." docdirincludes="*.txt"
		    jdk="${openjdk-windows-i586-build-url}" bundleidentifier="${game-bundle-identifier}" iconsfile="images/${game-logo-filename}" 
		    antreimplementationenabled="true" nativelauncherenabled="false" arch="i386" version="${game-version}" release="${game-release}"/>
		<create-windows-app-bundle executable="${game-package-name}" appjar="${destdir}/${game-jar-filename}" appname="${game-short-name}"
		    outdir="${destdir}" vmargs="-Xmx256m;-XX:MaxDirectMemorySize=128M;-Djava.ext.dirs=" docdir="." docdirincludes="*.txt"
		    jdk="${openjdk-windows-amd64-build-url}" bundleidentifier="${game-bundle-identifier}" iconsfile="images/${game-logo-filename}" 
		    antreimplementationenabled="true" nativelauncherenabled="false" arch="amd64" version="${game-version}" release="${game-release}"/>
	</target>
	<!-- ================================================================= -->
	<!-- Create OS X APP                                                   -->
	<!-- ================================================================= -->
	<target name="create-os-x-app">
	    <to-package-name property="game-package-name" input="${game-short-name}"/>
		<create-os-x-app-bundle arch="universal" executable="${game-package-name}" appjar="${destdir}/${game-jar-filename}" appname="${game-short-name}" 
		  	mainclass="${game-main-class-for-packr}" outdir="${destdir}" vmargs="-Xmx256m;-XX:MaxDirectMemorySize=128M;-Djava.ext.dirs="
			docdir="." docdirincludes="*.txt" jdk="${openjdk-macosx-universal-build-url}" bundleidentifier="${game-bundle-identifier}"
			iconsfile="images/${game-logo-filename}" antreimplementationenabled="true" nativelauncherenabled="true" version="${game-version}" 
			release="${game-release}"/>
	</target>
	<!-- ================================================================= -->
	<!-- Upload                                                            -->
	<!-- ================================================================= -->
	<target name="upload">
		<!-- Loads jsch-0.1.50.jar (which is required to use the optional scp task) into the system classloader
		     (trick provided by Alexey Razgulyaev: http://razgulyaev.blogspot.fr/2012/04/ant-how-to-load-library-on-fly-at.html) -->
		<classloader loader="system" classpath="lib/ant/jsch-0.1.50.jar"/>
		<!-- Gets the SFTP account's password from the end user's input -->
		<input message="Please enter the password:" addproperty="sftp-password"/>
		<!-- There is no way to delete obsolete files with Ant SCP, you have to do it yourself -->
		<!-- Uploads the packages and the archives (the binaries and the source code) onto the SFTP server in the Project file release -->
		<scp sftp="true" trust="true" todir="${sftp-userid}:${sftp-password}@${sftp-pfs-server}:${sftp-pfs-remotedir}">
			<fileset dir="${destdir}" includes="${project-unix-name}-${game-version}-${game-release}.*" excludes="${game-src-zip-filename}" />
		</scp>
		<scp sftp="true" trust="true" todir="${sftp-userid}:${sftp-password}@${sftp-pfs-server}:${sftp-pfs-remotedir}">
		    <fileset file="${destdir}/${game-src-zip-filename}" />
		</scp>
		<!-- Uploads the other files just by Java Webstart onto the SFTP server in the Project Web Space -->
		<scp sftp="true" trust="true" todir="${sftp-userid}:${sftp-password}@${sftp-server}:${sftp-remotedir}">
			<fileset dir="${destdir}" includes="*" excludes="${project-unix-name}-${game-version}-${game-release}.*" />
		</scp>
	</target>
	<!-- ================================================================= -->
	<!-- Clean                                                             -->
	<!-- ================================================================= -->
	<target name="clean" description="Deletes the java archive and the .class files">
		<delete failonerror="false">
			<fileset dir="${bindir}" includes="**/*.class" />
		</delete>
		<delete dir="${destdir}" failonerror="false" />
	</target>
	<!-- =================================================================== -->
	<!-- Run Targets                                                         -->
	<!-- =================================================================== -->
	<target name="run-editor" description="Runs the editor">
		<java classname="${editor-main-class}"
			  fork="true"
			  dir="${bindir}"
			  failonerror="true">
			<classpath refid="project.class.path"/>
			<jvmarg value="-splash:${editor-splashscreen-image}"/>
			<jvmarg value="-Xmx512m"/>
			<jvmarg value="-XX:MaxDirectMemorySize=128M"/>
			<jvmarg value="-Djava.ext.dirs="/>
			<jvmarg value="-Dsun.java2d.xrender=true"/>
			<jvmarg value="-Dsun.java2d.opengl=false"/>
		</java>
	</target>
	<target name="run-game" description="Runs the game">
		<java classname="${game-main-class}"
			  fork="true"
			  dir="${bindir}"
			  failonerror="true">
			<classpath refid="project.class.path"/>
			<jvmarg value="-Xmx256m"/>
			<jvmarg value="-XX:MaxDirectMemorySize=128M"/>
			<jvmarg value="-Djava.ext.dirs="/>
			<jvmarg value="-Dsun.java2d.xrender=true"/>
			<jvmarg value="-Dsun.java2d.opengl=false"/>
		</java>
	</target>
</project>